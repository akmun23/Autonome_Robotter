
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000234  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  000002a8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002a8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  00000318  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000847  00000000  00000000  00000340  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000781  00000000  00000000  00000b87  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002cc  00000000  00000000  00001308  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000007c  00000000  00000000  000015d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000041b  00000000  00000000  00001650  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000113  00000000  00000000  00001a6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001b7e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  18:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  30:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  34:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  38:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  3c:	0c 94 90 00 	jmp	0x120	; 0x120 <__vector_15>
  40:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  50:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  54:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  58:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  5c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  60:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  68:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  6c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  70:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  74:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  78:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d0 e1       	ldi	r29, 0x10	; 16
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_clear_bss>:
  88:	21 e0       	ldi	r18, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	01 c0       	rjmp	.+2      	; 0x92 <.do_clear_bss_start>

00000090 <.do_clear_bss_loop>:
  90:	1d 92       	st	X+, r1

00000092 <.do_clear_bss_start>:
  92:	a4 30       	cpi	r26, 0x04	; 4
  94:	b2 07       	cpc	r27, r18
  96:	e1 f7       	brne	.-8      	; 0x90 <.do_clear_bss_loop>
  98:	0e 94 52 00 	call	0xa4	; 0xa4 <main>
  9c:	0c 94 18 01 	jmp	0x230	; 0x230 <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <main>:

double dutyCycle = 0;
///////////////////////////////////////////////////////////////////////////////////////////////////
int main(void) {
	
	DDRD = (1 << PORTD4);
  a4:	80 e1       	ldi	r24, 0x10	; 16
  a6:	8a b9       	out	0x0a, r24	; 10
	
	
	TCCR1A = (1 << COM1B1) | (1 << WGM11) | (1 << WGM10);
  a8:	83 e2       	ldi	r24, 0x23	; 35
  aa:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f0080>
	TIMSK1 = (1 << TOIE1);
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f006f>
			
	sei();
  b4:	78 94       	sei
	
	TCCR1B = (1 << CS10); // starter timeren
  b6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f0081>
	MUX3 = 0     use PC1/ADC for input
	MUX2 = 0
	MUX1 = 0
	MUX0 = 1
	*/
	ADMUX = 0b01100001;
  ba:	81 e6       	ldi	r24, 0x61	; 97
  bc:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f007c>
	
	ADPS2 = 0
	ADPS1 = 1    MHz clock / 8 
	ADPS0 = 1
	*/
	ADCSRA = 0b10100011;
  c0:	ea e7       	ldi	r30, 0x7A	; 122
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	83 ea       	ldi	r24, 0xA3	; 163
  c6:	80 83       	st	Z, r24
	bit 3 = 0
	ADTS2 = 0
	ADTS1 = 0    free running mode
	ADTS0 = 0
	*/
	ADCSRB = 0b00000000;
  c8:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7f007b>
	
	ADCSRA |= (1 << ADSC);		// start ADC
  cc:	80 81       	ld	r24, Z
  ce:	80 64       	ori	r24, 0x40	; 64
  d0:	80 83       	st	Z, r24
	
	while (1) {	
		
		//dutyCycle = 65535;
		dutyCycle = 0;
  d2:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
  d6:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  da:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
  de:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e2:	2f ef       	ldi	r18, 0xFF	; 255
  e4:	8f e3       	ldi	r24, 0x3F	; 63
  e6:	98 e3       	ldi	r25, 0x38	; 56
  e8:	21 50       	subi	r18, 0x01	; 1
  ea:	80 40       	sbci	r24, 0x00	; 0
  ec:	90 40       	sbci	r25, 0x00	; 0
  ee:	e1 f7       	brne	.-8      	; 0xe8 <main+0x44>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <main+0x4e>
  f2:	00 00       	nop
		_delay_ms(100);
		if (ADCH < 125)
  f4:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f0079>
  f8:	8d 37       	cpi	r24, 0x7D	; 125
  fa:	58 f7       	brcc	.-42     	; 0xd2 <main+0x2e>
		{
			
			dutyCycle = 0;
  fc:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 100:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 104:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 108:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 10c:	2f ef       	ldi	r18, 0xFF	; 255
 10e:	8f e3       	ldi	r24, 0x3F	; 63
 110:	98 e3       	ldi	r25, 0x38	; 56
 112:	21 50       	subi	r18, 0x01	; 1
 114:	80 40       	sbci	r24, 0x00	; 0
 116:	90 40       	sbci	r25, 0x00	; 0
 118:	e1 f7       	brne	.-8      	; 0x112 <main+0x6e>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <main+0x78>
 11c:	00 00       	nop
 11e:	d9 cf       	rjmp	.-78     	; 0xd2 <main+0x2e>

00000120 <__vector_15>:
	}
	return(0);					
}


ISR(TIMER1_OVF_vect){
 120:	1f 92       	push	r1
 122:	0f 92       	push	r0
 124:	0f b6       	in	r0, 0x3f	; 63
 126:	0f 92       	push	r0
 128:	11 24       	eor	r1, r1
 12a:	2f 93       	push	r18
 12c:	3f 93       	push	r19
 12e:	4f 93       	push	r20
 130:	5f 93       	push	r21
 132:	6f 93       	push	r22
 134:	7f 93       	push	r23
 136:	8f 93       	push	r24
 138:	9f 93       	push	r25
 13a:	af 93       	push	r26
 13c:	bf 93       	push	r27
 13e:	ef 93       	push	r30
 140:	ff 93       	push	r31
	
	//OCR1A = (dutyCycle/100)*255;
	OCR1B = dutyCycle;
 142:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 146:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 14a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 14e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 152:	0e 94 c0 00 	call	0x180	; 0x180 <__fixunssfsi>
 156:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f008b>
 15a:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f008a>

 15e:	ff 91       	pop	r31
 160:	ef 91       	pop	r30
 162:	bf 91       	pop	r27
 164:	af 91       	pop	r26
 166:	9f 91       	pop	r25
 168:	8f 91       	pop	r24
 16a:	7f 91       	pop	r23
 16c:	6f 91       	pop	r22
 16e:	5f 91       	pop	r21
 170:	4f 91       	pop	r20
 172:	3f 91       	pop	r19
 174:	2f 91       	pop	r18
 176:	0f 90       	pop	r0
 178:	0f be       	out	0x3f, r0	; 63
 17a:	0f 90       	pop	r0
 17c:	1f 90       	pop	r1
 17e:	18 95       	reti

00000180 <__fixunssfsi>:
 180:	0e 94 f7 00 	call	0x1ee	; 0x1ee <__fp_splitA>
 184:	88 f0       	brcs	.+34     	; 0x1a8 <__fixunssfsi+0x28>
 186:	9f 57       	subi	r25, 0x7F	; 127
 188:	98 f0       	brcs	.+38     	; 0x1b0 <__fixunssfsi+0x30>
 18a:	b9 2f       	mov	r27, r25
 18c:	99 27       	eor	r25, r25
 18e:	b7 51       	subi	r27, 0x17	; 23
 190:	b0 f0       	brcs	.+44     	; 0x1be <__fixunssfsi+0x3e>
 192:	e1 f0       	breq	.+56     	; 0x1cc <__fixunssfsi+0x4c>
 194:	66 0f       	add	r22, r22
 196:	77 1f       	adc	r23, r23
 198:	88 1f       	adc	r24, r24
 19a:	99 1f       	adc	r25, r25
 19c:	1a f0       	brmi	.+6      	; 0x1a4 <__fixunssfsi+0x24>
 19e:	ba 95       	dec	r27
 1a0:	c9 f7       	brne	.-14     	; 0x194 <__fixunssfsi+0x14>
 1a2:	14 c0       	rjmp	.+40     	; 0x1cc <__fixunssfsi+0x4c>
 1a4:	b1 30       	cpi	r27, 0x01	; 1
 1a6:	91 f0       	breq	.+36     	; 0x1cc <__fixunssfsi+0x4c>
 1a8:	0e 94 11 01 	call	0x222	; 0x222 <__fp_zero>
 1ac:	b1 e0       	ldi	r27, 0x01	; 1
 1ae:	08 95       	ret
 1b0:	0c 94 11 01 	jmp	0x222	; 0x222 <__fp_zero>
 1b4:	67 2f       	mov	r22, r23
 1b6:	78 2f       	mov	r23, r24
 1b8:	88 27       	eor	r24, r24
 1ba:	b8 5f       	subi	r27, 0xF8	; 248
 1bc:	39 f0       	breq	.+14     	; 0x1cc <__fixunssfsi+0x4c>
 1be:	b9 3f       	cpi	r27, 0xF9	; 249
 1c0:	cc f3       	brlt	.-14     	; 0x1b4 <__fixunssfsi+0x34>
 1c2:	86 95       	lsr	r24
 1c4:	77 95       	ror	r23
 1c6:	67 95       	ror	r22
 1c8:	b3 95       	inc	r27
 1ca:	d9 f7       	brne	.-10     	; 0x1c2 <__fixunssfsi+0x42>
 1cc:	3e f4       	brtc	.+14     	; 0x1dc <__fixunssfsi+0x5c>
 1ce:	90 95       	com	r25
 1d0:	80 95       	com	r24
 1d2:	70 95       	com	r23
 1d4:	61 95       	neg	r22
 1d6:	7f 4f       	sbci	r23, 0xFF	; 255
 1d8:	8f 4f       	sbci	r24, 0xFF	; 255
 1da:	9f 4f       	sbci	r25, 0xFF	; 255
 1dc:	08 95       	ret

000001de <__fp_split3>:
 1de:	57 fd       	sbrc	r21, 7
 1e0:	90 58       	subi	r25, 0x80	; 128
 1e2:	44 0f       	add	r20, r20
 1e4:	55 1f       	adc	r21, r21
 1e6:	59 f0       	breq	.+22     	; 0x1fe <__fp_splitA+0x10>
 1e8:	5f 3f       	cpi	r21, 0xFF	; 255
 1ea:	71 f0       	breq	.+28     	; 0x208 <__fp_splitA+0x1a>
 1ec:	47 95       	ror	r20

000001ee <__fp_splitA>:
 1ee:	88 0f       	add	r24, r24
 1f0:	97 fb       	bst	r25, 7
 1f2:	99 1f       	adc	r25, r25
 1f4:	61 f0       	breq	.+24     	; 0x20e <__fp_splitA+0x20>
 1f6:	9f 3f       	cpi	r25, 0xFF	; 255
 1f8:	79 f0       	breq	.+30     	; 0x218 <__fp_splitA+0x2a>
 1fa:	87 95       	ror	r24
 1fc:	08 95       	ret
 1fe:	12 16       	cp	r1, r18
 200:	13 06       	cpc	r1, r19
 202:	14 06       	cpc	r1, r20
 204:	55 1f       	adc	r21, r21
 206:	f2 cf       	rjmp	.-28     	; 0x1ec <__fp_split3+0xe>
 208:	46 95       	lsr	r20
 20a:	f1 df       	rcall	.-30     	; 0x1ee <__fp_splitA>
 20c:	08 c0       	rjmp	.+16     	; 0x21e <__fp_splitA+0x30>
 20e:	16 16       	cp	r1, r22
 210:	17 06       	cpc	r1, r23
 212:	18 06       	cpc	r1, r24
 214:	99 1f       	adc	r25, r25
 216:	f1 cf       	rjmp	.-30     	; 0x1fa <__fp_splitA+0xc>
 218:	86 95       	lsr	r24
 21a:	71 05       	cpc	r23, r1
 21c:	61 05       	cpc	r22, r1
 21e:	08 94       	sec
 220:	08 95       	ret

00000222 <__fp_zero>:
 222:	e8 94       	clt

00000224 <__fp_szero>:
 224:	bb 27       	eor	r27, r27
 226:	66 27       	eor	r22, r22
 228:	77 27       	eor	r23, r23
 22a:	cb 01       	movw	r24, r22
 22c:	97 f9       	bld	r25, 7
 22e:	08 95       	ret

00000230 <_exit>:
 230:	f8 94       	cli

00000232 <__stop_program>:
 232:	ff cf       	rjmp	.-2      	; 0x232 <__stop_program>
